# This is a basic workflow to help you get started with Actions

name: actions_android_ci

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]


jobs: # A workflow run is made up of one or more jobs that can run sequentially or in parallel


  build:  # Job 1: This workflow contains a single job called "build"
    # The type of runner that the job will run on
    runs-on: macOS-latest
    timeout-minutes: 20
      strategy:
        matrix:
          api-level: [21, 29]
      steps:
        - name: checkout
          uses: actions/checkout@v1
          with:
            fetch-depth: 1

        - name: build, test and lint
          run: |
            npm install
            npm run build
            npm run lint
            npm test
        - name: run action
          uses: ./
          with:
            api-level: ${{ matrix.api-level }}
            target: default
            abi: x86
            headless: true
#    # Steps represent a sequence of tasks that will be executed as part of the job
#    steps:
#
#      # Actions 1: Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
#      - uses: actions/checkout@v2
#
#      # Actions 2
#      - name: Actions 2 Set up JDK 1.8
#        uses: actions/setup-java@v1
#        with:
#          java-version: 1.8
#
#      # Actions 3: gradlew/app/tasks/build/build
#      - name: Actions 3 Build debug APK
#        run: bash ./gradlew build --stacktrace
#
#      # Actions 4
#      - name: Actions 4 Android Emulator Runner
#        uses: ReactiveCircus/android-emulator-runner@v2.11.0
#        with:
#          api-level: 28
#          script: ./gradlew connectedCheck
#
#      # Actions 5
#      - name: Actions 5 Upload APK
#        uses: actions/upload-artifact@v1
#        with:
#          name: apk
#          path: app/build/outputs/apk/debug/app-debug.apk

